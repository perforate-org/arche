type Citation = variant { Url : text; Paper : PaperId; Other : text };
type Paper = record {
  ab : text;
  categories : vec PaperCategory;
  status : PaperStatus;
  title : text;
  updated_at : nat64;
  references : vec Citation;
  content : text;
  cover_image : opt text;
  tags : vec text;
  lead_author : record { text; text };
  created_at : nat64;
  co_authors : vec record { text; text };
  citations : vec Citation;
};
type PaperCategory = variant {
  MachineLearning;
  SystemDesign;
  Security;
  Blockchain;
  DevOps;
  Programming;
  Other : text;
};
type PaperId = record { version : nat16; number : nat32; months : nat16 };
type PaperStatus = variant { UnderReview; Draft; Archived; Published };
type Result = variant { Ok : User; Err : text };
type Result_1 = variant { Ok : Paper; Err : text };
type Result_2 = variant { Ok; Err : text };
type Result_3 = variant { Ok : bool; Err : text };
type User = record {
  id : opt text;
  name : text;
  lead_authored_papers : vec PaperId;
  co_authored_papers : vec PaperId;
};
service : {
  fetch_caller : () -> (Result) query;
  fetch_paper : (text) -> (Result_1) query;
  fetch_user : (text) -> (Result) query;
  is_registered : () -> (bool) query;
  register_user : () -> (Result_2);
  update_caller : (User) -> (Result_2);
  user_exists_by_id : (text) -> (Result_3) query;
}
